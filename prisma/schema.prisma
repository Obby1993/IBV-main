// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Event {
  id                 String      @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  dateStart          DateTime
  dateEnd            DateTime
  location           Address?
  description        String
  numberPlaceMen     Int
  numberPlaceWomen   Int
  autre              String?
  players            Player[]
  imageUrl           String?
  price              Int
  stripeProductId    String?
  stripePriceId      String?
}
model Player {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  email             String?
  paiement          Boolean @default(false)
  stripeCustomerId  String?  @unique
  niveau            String
  genre             String
  eventId           String @db.ObjectId
  event             Event  @relation(fields: [eventId], references: [id])
}

type Address {
  street String
  city   String
  state  String
  zip    String
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  hashedPassword String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

}
